═══════════════════════════════════════════════════════════
 QUICK DEPLOYMENT STEPS
═══════════════════════════════════════════════════════════

WHERE ARE YOU DEPLOYING?
------------------------
Choose one:

A) Vercel (easiest for Next.js)
B) Netlify  
C) VPS/cPanel (manual)
D) Other hosting


═══════════════════════════════════════════════════════════
OPTION A: VERCEL (RECOMMENDED)
═══════════════════════════════════════════════════════════

1. Install Vercel:
   npm install -g vercel

2. Login:
   vercel login

3. Deploy:
   vercel

4. Add Environment Variables:
   - Go to: https://vercel.com/dashboard
   - Select your project → Settings → Environment Variables
   - Add these 8 variables:

   NEXT_PUBLIC_API_KEY=AIzaSyBCJtwhDozcLiDL0XF6upECNhTawDaeTtg
   NEXT_PUBLIC_AUTH_DOMAIN=new-emerket.firebaseapp.com
   NEXT_PUBLIC_PROJECT_ID=new-emerket
   NEXT_PUBLIC_STORAGE_BUCKET=new-emerket.firebasestorage.app
   NEXT_PUBLIC_MESSAGING_SENDER_ID=311169583699
   NEXT_PUBLIC_APP_ID=1:311169583699:web:597496a19b4392c15194a6
   NEXT_PUBLIC_MEASUREMENT_ID=G-8RXPFMFVG0
   NEXT_PUBLIC_VAPID_KEY=BCrHukAFXC_b-Lflllp2cFA8LIH5QL4QHIpaQPeVVr0xwSOIWhki0TBDP12QxhbrnSFIUnGq1T-EuA_oB82Bn0U

5. Redeploy:
   vercel --prod

✅ DONE!


═══════════════════════════════════════════════════════════
OPTION B: NETLIFY
═══════════════════════════════════════════════════════════

1. Install Netlify CLI:
   npm install -g netlify-cli

2. Login:
   netlify login

3. Initialize:
   netlify init

4. Add Environment Variables:
   - Go to Netlify Dashboard
   - Site Settings → Environment Variables
   - Add all 8 variables (same as Vercel above)

5. Deploy:
   netlify deploy --prod

✅ DONE!


═══════════════════════════════════════════════════════════
OPTION C: VPS/cPanel (MANUAL)
═══════════════════════════════════════════════════════════

1. Build locally:
   npm run build

2. Upload these to server:
   - All files and folders
   - EXCEPT: node_modules, .env.local, .next

3. On server (via SSH or terminal):
   npm install
   
4. Create .env.local on server:
   nano .env.local
   (Paste all 8 environment variables)
   Save: Ctrl+X, Y, Enter

5. Build on server:
   npm run build

6. Start:
   npm start

✅ DONE!


═══════════════════════════════════════════════════════════
⚠️  CRITICAL - AFTER DEPLOYMENT
═══════════════════════════════════════════════════════════

1. Authorize your domain in Firebase:
   - https://console.firebase.google.com/
   - Select "new-emerket" project
   - Authentication → Settings → Authorized domains
   - Add your deployed domain

2. Test these:
   ✅ Website loads
   ✅ Login works
   ✅ Push notification request appears
   ✅ No Firebase errors in console


═══════════════════════════════════════════════════════════
📝 NOTES
═══════════════════════════════════════════════════════════

✅ Service worker auto-generates during build
✅ All Firebase credentials secured
✅ Build tested successfully
✅ Ready for production

Your Firebase configuration is fixed and deployment-ready!

